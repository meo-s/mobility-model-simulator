// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: protos/mobmodel-simulator.proto

#include "protos/mobmodel-simulator.pb.h"
#include "protos/mobmodel-simulator.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace pb {

static const char* MobilityModelSimulatorService_method_names[] = {
  "/pb.MobilityModelSimulatorService/isSimulatorIdle",
  "/pb.MobilityModelSimulatorService/tryStartingSimulation",
  "/pb.MobilityModelSimulatorService/tryStoppingSimulation",
  "/pb.MobilityModelSimulatorService/getSimulatorFrameInfo",
  "/pb.MobilityModelSimulatorService/getSimulatorApproxMap",
};

std::unique_ptr< MobilityModelSimulatorService::Stub> MobilityModelSimulatorService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< MobilityModelSimulatorService::Stub> stub(new MobilityModelSimulatorService::Stub(channel, options));
  return stub;
}

MobilityModelSimulatorService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_isSimulatorIdle_(MobilityModelSimulatorService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_tryStartingSimulation_(MobilityModelSimulatorService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_tryStoppingSimulation_(MobilityModelSimulatorService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getSimulatorFrameInfo_(MobilityModelSimulatorService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_getSimulatorApproxMap_(MobilityModelSimulatorService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status MobilityModelSimulatorService::Stub::isSimulatorIdle(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::BoolValue* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::protobuf::Empty, ::google::protobuf::BoolValue, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_isSimulatorIdle_, context, request, response);
}

void MobilityModelSimulatorService::Stub::async::isSimulatorIdle(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::protobuf::Empty, ::google::protobuf::BoolValue, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isSimulatorIdle_, context, request, response, std::move(f));
}

void MobilityModelSimulatorService::Stub::async::isSimulatorIdle(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_isSimulatorIdle_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* MobilityModelSimulatorService::Stub::PrepareAsyncisSimulatorIdleRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::BoolValue, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_isSimulatorIdle_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* MobilityModelSimulatorService::Stub::AsyncisSimulatorIdleRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncisSimulatorIdleRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status MobilityModelSimulatorService::Stub::tryStartingSimulation(::grpc::ClientContext* context, const ::pb::MobilityModelSimulatorConfig& request, ::google::protobuf::BoolValue* response) {
  return ::grpc::internal::BlockingUnaryCall< ::pb::MobilityModelSimulatorConfig, ::google::protobuf::BoolValue, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_tryStartingSimulation_, context, request, response);
}

void MobilityModelSimulatorService::Stub::async::tryStartingSimulation(::grpc::ClientContext* context, const ::pb::MobilityModelSimulatorConfig* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::pb::MobilityModelSimulatorConfig, ::google::protobuf::BoolValue, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_tryStartingSimulation_, context, request, response, std::move(f));
}

void MobilityModelSimulatorService::Stub::async::tryStartingSimulation(::grpc::ClientContext* context, const ::pb::MobilityModelSimulatorConfig* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_tryStartingSimulation_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* MobilityModelSimulatorService::Stub::PrepareAsynctryStartingSimulationRaw(::grpc::ClientContext* context, const ::pb::MobilityModelSimulatorConfig& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::BoolValue, ::pb::MobilityModelSimulatorConfig, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_tryStartingSimulation_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* MobilityModelSimulatorService::Stub::AsynctryStartingSimulationRaw(::grpc::ClientContext* context, const ::pb::MobilityModelSimulatorConfig& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynctryStartingSimulationRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status MobilityModelSimulatorService::Stub::tryStoppingSimulation(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::BoolValue* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::protobuf::Empty, ::google::protobuf::BoolValue, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_tryStoppingSimulation_, context, request, response);
}

void MobilityModelSimulatorService::Stub::async::tryStoppingSimulation(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::protobuf::Empty, ::google::protobuf::BoolValue, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_tryStoppingSimulation_, context, request, response, std::move(f));
}

void MobilityModelSimulatorService::Stub::async::tryStoppingSimulation(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_tryStoppingSimulation_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* MobilityModelSimulatorService::Stub::PrepareAsynctryStoppingSimulationRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::BoolValue, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_tryStoppingSimulation_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* MobilityModelSimulatorService::Stub::AsynctryStoppingSimulationRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsynctryStoppingSimulationRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status MobilityModelSimulatorService::Stub::getSimulatorFrameInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::pb::MobilityModelSimulatorFrameInfo* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::protobuf::Empty, ::pb::MobilityModelSimulatorFrameInfo, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getSimulatorFrameInfo_, context, request, response);
}

void MobilityModelSimulatorService::Stub::async::getSimulatorFrameInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::pb::MobilityModelSimulatorFrameInfo* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::protobuf::Empty, ::pb::MobilityModelSimulatorFrameInfo, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getSimulatorFrameInfo_, context, request, response, std::move(f));
}

void MobilityModelSimulatorService::Stub::async::getSimulatorFrameInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::pb::MobilityModelSimulatorFrameInfo* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getSimulatorFrameInfo_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::pb::MobilityModelSimulatorFrameInfo>* MobilityModelSimulatorService::Stub::PrepareAsyncgetSimulatorFrameInfoRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::pb::MobilityModelSimulatorFrameInfo, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getSimulatorFrameInfo_, context, request);
}

::grpc::ClientAsyncResponseReader< ::pb::MobilityModelSimulatorFrameInfo>* MobilityModelSimulatorService::Stub::AsyncgetSimulatorFrameInfoRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetSimulatorFrameInfoRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status MobilityModelSimulatorService::Stub::getSimulatorApproxMap(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::pb::MobilityModelSimulatorApproxMap* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::protobuf::Empty, ::pb::MobilityModelSimulatorApproxMap, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_getSimulatorApproxMap_, context, request, response);
}

void MobilityModelSimulatorService::Stub::async::getSimulatorApproxMap(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::pb::MobilityModelSimulatorApproxMap* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::protobuf::Empty, ::pb::MobilityModelSimulatorApproxMap, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getSimulatorApproxMap_, context, request, response, std::move(f));
}

void MobilityModelSimulatorService::Stub::async::getSimulatorApproxMap(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::pb::MobilityModelSimulatorApproxMap* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_getSimulatorApproxMap_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::pb::MobilityModelSimulatorApproxMap>* MobilityModelSimulatorService::Stub::PrepareAsyncgetSimulatorApproxMapRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::pb::MobilityModelSimulatorApproxMap, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_getSimulatorApproxMap_, context, request);
}

::grpc::ClientAsyncResponseReader< ::pb::MobilityModelSimulatorApproxMap>* MobilityModelSimulatorService::Stub::AsyncgetSimulatorApproxMapRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncgetSimulatorApproxMapRaw(context, request, cq);
  result->StartCall();
  return result;
}

MobilityModelSimulatorService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MobilityModelSimulatorService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MobilityModelSimulatorService::Service, ::google::protobuf::Empty, ::google::protobuf::BoolValue, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MobilityModelSimulatorService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::google::protobuf::BoolValue* resp) {
               return service->isSimulatorIdle(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MobilityModelSimulatorService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MobilityModelSimulatorService::Service, ::pb::MobilityModelSimulatorConfig, ::google::protobuf::BoolValue, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MobilityModelSimulatorService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::pb::MobilityModelSimulatorConfig* req,
             ::google::protobuf::BoolValue* resp) {
               return service->tryStartingSimulation(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MobilityModelSimulatorService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MobilityModelSimulatorService::Service, ::google::protobuf::Empty, ::google::protobuf::BoolValue, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MobilityModelSimulatorService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::google::protobuf::BoolValue* resp) {
               return service->tryStoppingSimulation(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MobilityModelSimulatorService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MobilityModelSimulatorService::Service, ::google::protobuf::Empty, ::pb::MobilityModelSimulatorFrameInfo, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MobilityModelSimulatorService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::pb::MobilityModelSimulatorFrameInfo* resp) {
               return service->getSimulatorFrameInfo(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      MobilityModelSimulatorService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< MobilityModelSimulatorService::Service, ::google::protobuf::Empty, ::pb::MobilityModelSimulatorApproxMap, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](MobilityModelSimulatorService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::pb::MobilityModelSimulatorApproxMap* resp) {
               return service->getSimulatorApproxMap(ctx, req, resp);
             }, this)));
}

MobilityModelSimulatorService::Service::~Service() {
}

::grpc::Status MobilityModelSimulatorService::Service::isSimulatorIdle(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::BoolValue* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status MobilityModelSimulatorService::Service::tryStartingSimulation(::grpc::ServerContext* context, const ::pb::MobilityModelSimulatorConfig* request, ::google::protobuf::BoolValue* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status MobilityModelSimulatorService::Service::tryStoppingSimulation(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::BoolValue* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status MobilityModelSimulatorService::Service::getSimulatorFrameInfo(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::pb::MobilityModelSimulatorFrameInfo* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status MobilityModelSimulatorService::Service::getSimulatorApproxMap(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::pb::MobilityModelSimulatorApproxMap* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace pb

