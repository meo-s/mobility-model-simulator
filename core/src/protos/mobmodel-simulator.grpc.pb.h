// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: protos/mobmodel-simulator.proto
#ifndef GRPC_protos_2fmobmodel_2dsimulator_2eproto__INCLUDED
#define GRPC_protos_2fmobmodel_2dsimulator_2eproto__INCLUDED

#include "protos/mobmodel-simulator.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace pb {

class MobilityModelSimulatorService final {
 public:
  static constexpr char const* service_full_name() {
    return "pb.MobilityModelSimulatorService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status isSimulatorIdle(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::BoolValue* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> AsyncisSimulatorIdle(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(AsyncisSimulatorIdleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> PrepareAsyncisSimulatorIdle(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(PrepareAsyncisSimulatorIdleRaw(context, request, cq));
    }
    virtual ::grpc::Status tryStartingSimulation(::grpc::ClientContext* context, const ::pb::MobilityModelSimulatorConfig& request, ::google::protobuf::BoolValue* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> AsynctryStartingSimulation(::grpc::ClientContext* context, const ::pb::MobilityModelSimulatorConfig& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(AsynctryStartingSimulationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> PrepareAsynctryStartingSimulation(::grpc::ClientContext* context, const ::pb::MobilityModelSimulatorConfig& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(PrepareAsynctryStartingSimulationRaw(context, request, cq));
    }
    virtual ::grpc::Status tryStoppingSimulation(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::BoolValue* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> AsynctryStoppingSimulation(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(AsynctryStoppingSimulationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>> PrepareAsynctryStoppingSimulation(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>>(PrepareAsynctryStoppingSimulationRaw(context, request, cq));
    }
    virtual ::grpc::Status getSimulatorFrameInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::pb::MobilityModelSimulatorFrameInfo* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pb::MobilityModelSimulatorFrameInfo>> AsyncgetSimulatorFrameInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pb::MobilityModelSimulatorFrameInfo>>(AsyncgetSimulatorFrameInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pb::MobilityModelSimulatorFrameInfo>> PrepareAsyncgetSimulatorFrameInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pb::MobilityModelSimulatorFrameInfo>>(PrepareAsyncgetSimulatorFrameInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status getSimulatorApproxMap(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::pb::MobilityModelSimulatorApproxMap* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pb::MobilityModelSimulatorApproxMap>> AsyncgetSimulatorApproxMap(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pb::MobilityModelSimulatorApproxMap>>(AsyncgetSimulatorApproxMapRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pb::MobilityModelSimulatorApproxMap>> PrepareAsyncgetSimulatorApproxMap(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pb::MobilityModelSimulatorApproxMap>>(PrepareAsyncgetSimulatorApproxMapRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void isSimulatorIdle(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) = 0;
      virtual void isSimulatorIdle(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void tryStartingSimulation(::grpc::ClientContext* context, const ::pb::MobilityModelSimulatorConfig* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) = 0;
      virtual void tryStartingSimulation(::grpc::ClientContext* context, const ::pb::MobilityModelSimulatorConfig* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void tryStoppingSimulation(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) = 0;
      virtual void tryStoppingSimulation(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void getSimulatorFrameInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::pb::MobilityModelSimulatorFrameInfo* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getSimulatorFrameInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::pb::MobilityModelSimulatorFrameInfo* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void getSimulatorApproxMap(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::pb::MobilityModelSimulatorApproxMap* response, std::function<void(::grpc::Status)>) = 0;
      virtual void getSimulatorApproxMap(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::pb::MobilityModelSimulatorApproxMap* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* AsyncisSimulatorIdleRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* PrepareAsyncisSimulatorIdleRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* AsynctryStartingSimulationRaw(::grpc::ClientContext* context, const ::pb::MobilityModelSimulatorConfig& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* PrepareAsynctryStartingSimulationRaw(::grpc::ClientContext* context, const ::pb::MobilityModelSimulatorConfig& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* AsynctryStoppingSimulationRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::BoolValue>* PrepareAsynctryStoppingSimulationRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::pb::MobilityModelSimulatorFrameInfo>* AsyncgetSimulatorFrameInfoRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::pb::MobilityModelSimulatorFrameInfo>* PrepareAsyncgetSimulatorFrameInfoRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::pb::MobilityModelSimulatorApproxMap>* AsyncgetSimulatorApproxMapRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::pb::MobilityModelSimulatorApproxMap>* PrepareAsyncgetSimulatorApproxMapRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status isSimulatorIdle(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::BoolValue* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> AsyncisSimulatorIdle(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(AsyncisSimulatorIdleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> PrepareAsyncisSimulatorIdle(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(PrepareAsyncisSimulatorIdleRaw(context, request, cq));
    }
    ::grpc::Status tryStartingSimulation(::grpc::ClientContext* context, const ::pb::MobilityModelSimulatorConfig& request, ::google::protobuf::BoolValue* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> AsynctryStartingSimulation(::grpc::ClientContext* context, const ::pb::MobilityModelSimulatorConfig& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(AsynctryStartingSimulationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> PrepareAsynctryStartingSimulation(::grpc::ClientContext* context, const ::pb::MobilityModelSimulatorConfig& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(PrepareAsynctryStartingSimulationRaw(context, request, cq));
    }
    ::grpc::Status tryStoppingSimulation(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::BoolValue* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> AsynctryStoppingSimulation(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(AsynctryStoppingSimulationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>> PrepareAsynctryStoppingSimulation(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>>(PrepareAsynctryStoppingSimulationRaw(context, request, cq));
    }
    ::grpc::Status getSimulatorFrameInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::pb::MobilityModelSimulatorFrameInfo* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pb::MobilityModelSimulatorFrameInfo>> AsyncgetSimulatorFrameInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pb::MobilityModelSimulatorFrameInfo>>(AsyncgetSimulatorFrameInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pb::MobilityModelSimulatorFrameInfo>> PrepareAsyncgetSimulatorFrameInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pb::MobilityModelSimulatorFrameInfo>>(PrepareAsyncgetSimulatorFrameInfoRaw(context, request, cq));
    }
    ::grpc::Status getSimulatorApproxMap(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::pb::MobilityModelSimulatorApproxMap* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pb::MobilityModelSimulatorApproxMap>> AsyncgetSimulatorApproxMap(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pb::MobilityModelSimulatorApproxMap>>(AsyncgetSimulatorApproxMapRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pb::MobilityModelSimulatorApproxMap>> PrepareAsyncgetSimulatorApproxMap(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pb::MobilityModelSimulatorApproxMap>>(PrepareAsyncgetSimulatorApproxMapRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void isSimulatorIdle(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) override;
      void isSimulatorIdle(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) override;
      void tryStartingSimulation(::grpc::ClientContext* context, const ::pb::MobilityModelSimulatorConfig* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) override;
      void tryStartingSimulation(::grpc::ClientContext* context, const ::pb::MobilityModelSimulatorConfig* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) override;
      void tryStoppingSimulation(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::BoolValue* response, std::function<void(::grpc::Status)>) override;
      void tryStoppingSimulation(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::BoolValue* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getSimulatorFrameInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::pb::MobilityModelSimulatorFrameInfo* response, std::function<void(::grpc::Status)>) override;
      void getSimulatorFrameInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::pb::MobilityModelSimulatorFrameInfo* response, ::grpc::ClientUnaryReactor* reactor) override;
      void getSimulatorApproxMap(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::pb::MobilityModelSimulatorApproxMap* response, std::function<void(::grpc::Status)>) override;
      void getSimulatorApproxMap(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::pb::MobilityModelSimulatorApproxMap* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* AsyncisSimulatorIdleRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* PrepareAsyncisSimulatorIdleRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* AsynctryStartingSimulationRaw(::grpc::ClientContext* context, const ::pb::MobilityModelSimulatorConfig& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* PrepareAsynctryStartingSimulationRaw(::grpc::ClientContext* context, const ::pb::MobilityModelSimulatorConfig& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* AsynctryStoppingSimulationRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::BoolValue>* PrepareAsynctryStoppingSimulationRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::pb::MobilityModelSimulatorFrameInfo>* AsyncgetSimulatorFrameInfoRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::pb::MobilityModelSimulatorFrameInfo>* PrepareAsyncgetSimulatorFrameInfoRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::pb::MobilityModelSimulatorApproxMap>* AsyncgetSimulatorApproxMapRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::pb::MobilityModelSimulatorApproxMap>* PrepareAsyncgetSimulatorApproxMapRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_isSimulatorIdle_;
    const ::grpc::internal::RpcMethod rpcmethod_tryStartingSimulation_;
    const ::grpc::internal::RpcMethod rpcmethod_tryStoppingSimulation_;
    const ::grpc::internal::RpcMethod rpcmethod_getSimulatorFrameInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_getSimulatorApproxMap_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status isSimulatorIdle(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::BoolValue* response);
    virtual ::grpc::Status tryStartingSimulation(::grpc::ServerContext* context, const ::pb::MobilityModelSimulatorConfig* request, ::google::protobuf::BoolValue* response);
    virtual ::grpc::Status tryStoppingSimulation(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::BoolValue* response);
    virtual ::grpc::Status getSimulatorFrameInfo(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::pb::MobilityModelSimulatorFrameInfo* response);
    virtual ::grpc::Status getSimulatorApproxMap(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::pb::MobilityModelSimulatorApproxMap* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_isSimulatorIdle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_isSimulatorIdle() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_isSimulatorIdle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isSimulatorIdle(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisSimulatorIdle(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::BoolValue>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_tryStartingSimulation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_tryStartingSimulation() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_tryStartingSimulation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status tryStartingSimulation(::grpc::ServerContext* /*context*/, const ::pb::MobilityModelSimulatorConfig* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesttryStartingSimulation(::grpc::ServerContext* context, ::pb::MobilityModelSimulatorConfig* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::BoolValue>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_tryStoppingSimulation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_tryStoppingSimulation() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_tryStoppingSimulation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status tryStoppingSimulation(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesttryStoppingSimulation(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::BoolValue>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getSimulatorFrameInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getSimulatorFrameInfo() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_getSimulatorFrameInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getSimulatorFrameInfo(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::pb::MobilityModelSimulatorFrameInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetSimulatorFrameInfo(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::pb::MobilityModelSimulatorFrameInfo>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_getSimulatorApproxMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_getSimulatorApproxMap() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_getSimulatorApproxMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getSimulatorApproxMap(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::pb::MobilityModelSimulatorApproxMap* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetSimulatorApproxMap(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::pb::MobilityModelSimulatorApproxMap>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_isSimulatorIdle<WithAsyncMethod_tryStartingSimulation<WithAsyncMethod_tryStoppingSimulation<WithAsyncMethod_getSimulatorFrameInfo<WithAsyncMethod_getSimulatorApproxMap<Service > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_isSimulatorIdle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_isSimulatorIdle() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::BoolValue>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::BoolValue* response) { return this->isSimulatorIdle(context, request, response); }));}
    void SetMessageAllocatorFor_isSimulatorIdle(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::google::protobuf::BoolValue>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::BoolValue>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_isSimulatorIdle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isSimulatorIdle(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isSimulatorIdle(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::BoolValue* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_tryStartingSimulation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_tryStartingSimulation() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::pb::MobilityModelSimulatorConfig, ::google::protobuf::BoolValue>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::pb::MobilityModelSimulatorConfig* request, ::google::protobuf::BoolValue* response) { return this->tryStartingSimulation(context, request, response); }));}
    void SetMessageAllocatorFor_tryStartingSimulation(
        ::grpc::MessageAllocator< ::pb::MobilityModelSimulatorConfig, ::google::protobuf::BoolValue>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::pb::MobilityModelSimulatorConfig, ::google::protobuf::BoolValue>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_tryStartingSimulation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status tryStartingSimulation(::grpc::ServerContext* /*context*/, const ::pb::MobilityModelSimulatorConfig* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* tryStartingSimulation(
      ::grpc::CallbackServerContext* /*context*/, const ::pb::MobilityModelSimulatorConfig* /*request*/, ::google::protobuf::BoolValue* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_tryStoppingSimulation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_tryStoppingSimulation() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::BoolValue>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::BoolValue* response) { return this->tryStoppingSimulation(context, request, response); }));}
    void SetMessageAllocatorFor_tryStoppingSimulation(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::google::protobuf::BoolValue>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::BoolValue>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_tryStoppingSimulation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status tryStoppingSimulation(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* tryStoppingSimulation(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::BoolValue* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getSimulatorFrameInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getSimulatorFrameInfo() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::pb::MobilityModelSimulatorFrameInfo>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::pb::MobilityModelSimulatorFrameInfo* response) { return this->getSimulatorFrameInfo(context, request, response); }));}
    void SetMessageAllocatorFor_getSimulatorFrameInfo(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::pb::MobilityModelSimulatorFrameInfo>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::pb::MobilityModelSimulatorFrameInfo>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getSimulatorFrameInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getSimulatorFrameInfo(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::pb::MobilityModelSimulatorFrameInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getSimulatorFrameInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::pb::MobilityModelSimulatorFrameInfo* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_getSimulatorApproxMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_getSimulatorApproxMap() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::pb::MobilityModelSimulatorApproxMap>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::pb::MobilityModelSimulatorApproxMap* response) { return this->getSimulatorApproxMap(context, request, response); }));}
    void SetMessageAllocatorFor_getSimulatorApproxMap(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::pb::MobilityModelSimulatorApproxMap>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::pb::MobilityModelSimulatorApproxMap>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_getSimulatorApproxMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getSimulatorApproxMap(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::pb::MobilityModelSimulatorApproxMap* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getSimulatorApproxMap(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::pb::MobilityModelSimulatorApproxMap* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_isSimulatorIdle<WithCallbackMethod_tryStartingSimulation<WithCallbackMethod_tryStoppingSimulation<WithCallbackMethod_getSimulatorFrameInfo<WithCallbackMethod_getSimulatorApproxMap<Service > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_isSimulatorIdle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_isSimulatorIdle() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_isSimulatorIdle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isSimulatorIdle(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_tryStartingSimulation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_tryStartingSimulation() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_tryStartingSimulation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status tryStartingSimulation(::grpc::ServerContext* /*context*/, const ::pb::MobilityModelSimulatorConfig* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_tryStoppingSimulation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_tryStoppingSimulation() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_tryStoppingSimulation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status tryStoppingSimulation(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getSimulatorFrameInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getSimulatorFrameInfo() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_getSimulatorFrameInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getSimulatorFrameInfo(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::pb::MobilityModelSimulatorFrameInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_getSimulatorApproxMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_getSimulatorApproxMap() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_getSimulatorApproxMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getSimulatorApproxMap(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::pb::MobilityModelSimulatorApproxMap* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_isSimulatorIdle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_isSimulatorIdle() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_isSimulatorIdle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isSimulatorIdle(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestisSimulatorIdle(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_tryStartingSimulation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_tryStartingSimulation() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_tryStartingSimulation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status tryStartingSimulation(::grpc::ServerContext* /*context*/, const ::pb::MobilityModelSimulatorConfig* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesttryStartingSimulation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_tryStoppingSimulation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_tryStoppingSimulation() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_tryStoppingSimulation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status tryStoppingSimulation(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequesttryStoppingSimulation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getSimulatorFrameInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getSimulatorFrameInfo() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_getSimulatorFrameInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getSimulatorFrameInfo(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::pb::MobilityModelSimulatorFrameInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetSimulatorFrameInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_getSimulatorApproxMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_getSimulatorApproxMap() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_getSimulatorApproxMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getSimulatorApproxMap(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::pb::MobilityModelSimulatorApproxMap* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestgetSimulatorApproxMap(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_isSimulatorIdle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_isSimulatorIdle() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->isSimulatorIdle(context, request, response); }));
    }
    ~WithRawCallbackMethod_isSimulatorIdle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status isSimulatorIdle(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* isSimulatorIdle(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_tryStartingSimulation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_tryStartingSimulation() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->tryStartingSimulation(context, request, response); }));
    }
    ~WithRawCallbackMethod_tryStartingSimulation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status tryStartingSimulation(::grpc::ServerContext* /*context*/, const ::pb::MobilityModelSimulatorConfig* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* tryStartingSimulation(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_tryStoppingSimulation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_tryStoppingSimulation() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->tryStoppingSimulation(context, request, response); }));
    }
    ~WithRawCallbackMethod_tryStoppingSimulation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status tryStoppingSimulation(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* tryStoppingSimulation(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getSimulatorFrameInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getSimulatorFrameInfo() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getSimulatorFrameInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_getSimulatorFrameInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getSimulatorFrameInfo(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::pb::MobilityModelSimulatorFrameInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getSimulatorFrameInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_getSimulatorApproxMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_getSimulatorApproxMap() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->getSimulatorApproxMap(context, request, response); }));
    }
    ~WithRawCallbackMethod_getSimulatorApproxMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status getSimulatorApproxMap(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::pb::MobilityModelSimulatorApproxMap* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* getSimulatorApproxMap(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_isSimulatorIdle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_isSimulatorIdle() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::google::protobuf::BoolValue>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::google::protobuf::BoolValue>* streamer) {
                       return this->StreamedisSimulatorIdle(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_isSimulatorIdle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status isSimulatorIdle(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedisSimulatorIdle(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::BoolValue>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_tryStartingSimulation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_tryStartingSimulation() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::pb::MobilityModelSimulatorConfig, ::google::protobuf::BoolValue>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::pb::MobilityModelSimulatorConfig, ::google::protobuf::BoolValue>* streamer) {
                       return this->StreamedtryStartingSimulation(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_tryStartingSimulation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status tryStartingSimulation(::grpc::ServerContext* /*context*/, const ::pb::MobilityModelSimulatorConfig* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedtryStartingSimulation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::pb::MobilityModelSimulatorConfig,::google::protobuf::BoolValue>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_tryStoppingSimulation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_tryStoppingSimulation() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::google::protobuf::BoolValue>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::google::protobuf::BoolValue>* streamer) {
                       return this->StreamedtryStoppingSimulation(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_tryStoppingSimulation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status tryStoppingSimulation(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::BoolValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedtryStoppingSimulation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::BoolValue>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getSimulatorFrameInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getSimulatorFrameInfo() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::pb::MobilityModelSimulatorFrameInfo>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::pb::MobilityModelSimulatorFrameInfo>* streamer) {
                       return this->StreamedgetSimulatorFrameInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getSimulatorFrameInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getSimulatorFrameInfo(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::pb::MobilityModelSimulatorFrameInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetSimulatorFrameInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::pb::MobilityModelSimulatorFrameInfo>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_getSimulatorApproxMap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_getSimulatorApproxMap() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::pb::MobilityModelSimulatorApproxMap>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::pb::MobilityModelSimulatorApproxMap>* streamer) {
                       return this->StreamedgetSimulatorApproxMap(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_getSimulatorApproxMap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status getSimulatorApproxMap(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::pb::MobilityModelSimulatorApproxMap* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedgetSimulatorApproxMap(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::pb::MobilityModelSimulatorApproxMap>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_isSimulatorIdle<WithStreamedUnaryMethod_tryStartingSimulation<WithStreamedUnaryMethod_tryStoppingSimulation<WithStreamedUnaryMethod_getSimulatorFrameInfo<WithStreamedUnaryMethod_getSimulatorApproxMap<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_isSimulatorIdle<WithStreamedUnaryMethod_tryStartingSimulation<WithStreamedUnaryMethod_tryStoppingSimulation<WithStreamedUnaryMethod_getSimulatorFrameInfo<WithStreamedUnaryMethod_getSimulatorApproxMap<Service > > > > > StreamedService;
};

}  // namespace pb


#endif  // GRPC_protos_2fmobmodel_2dsimulator_2eproto__INCLUDED
